A valida√ß√£o de formul√°rios no lado do cliente utilizando JavaScript √© uma t√©cnica essencial para garantir que os dados inseridos por um usu√°rio
estejam corretos antes de serem enviados ao servidor. Isso melhora a experi√™ncia do usu√°rio e reduz o n√∫mero de requisi√ß√µes com dados inv√°lidos.

üìå1. Captura de Dados com JavaScript
Quando um usu√°rio preenche um formul√°rio HTML, o JavaScript pode acessar os dados inseridos utilizando o DOM (Document Object Model).
 Isso √© feito selecionando os elementos do formul√°rio e lendo seus valores:

html
Copiar
Editar
<form id="meuFormulario">
  <input type="text" id="nome" />
  <input type="email" id="email" />
  <button type="submit">Enviar</button>
</form>
javascript
Copiar
Editar
const formulario = document.getElementById('meuFormulario');

formulario.addEventListener('submit', function(evento) {
  evento.preventDefault(); // impede o envio autom√°tico
  const nome = document.getElementById('nome').value;
  const email = document.getElementById('email').value;

  // valida√ß√µes aqui
});
üìå2. Verifica√ß√µes com JavaScript
Ap√≥s capturar os dados, voc√™ pode fazer verifica√ß√µes como:

Campos obrigat√≥rios n√£o estarem vazios

Comprimento m√≠nimo/m√°ximo

Valores num√©ricos v√°lidos

Formato de e-mail, telefone, CPF, etc.

Exemplo simples de verifica√ß√£o:

javascript
Copiar
Editar
if (nome.trim() === '') {
  alert("O campo nome √© obrigat√≥rio.");
  return;
}
üìå3. Express√µes Regulares (Regex)
Uma express√£o regular √© um padr√£o utilizado para encontrar correspond√™ncias em strings.
√â muito √∫til para valida√ß√µes mais complexas, como formatos espec√≠ficos (e-mail, CEP, CPF etc.).

Valida√ß√£o de e-mail com express√£o regular
javascript
Copiar
Editar
const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
if (!emailRegex.test(email)) {
  alert("E-mail inv√°lido.");
  return;
}
Explica√ß√£o da express√£o regular: /^[^\s@]+@[^\s@]+\.[^\s@]+$/
^ e $ ‚Äî indicam o in√≠cio e o fim da string.

[^\s@]+ ‚Äî um ou mais caracteres que n√£o sejam espa√ßos em branco ou "@"

@ ‚Äî s√≠mbolo obrigat√≥rio de separa√ß√£o no e-mail

[^\s@]+ ‚Äî dom√≠nio (ex: "gmail")

\. ‚Äî ponto literal (representa o ponto entre dom√≠nio e TLD, como ".com")

[^\s@]+ ‚Äî o TLD (ex: "com", "org")

üìå4. Conclus√£o
A valida√ß√£o no lado do cliente com JavaScript:

Melhora a usabilidade

Reduz tr√°fego desnecess√°rio

Permite feedback imediato

Pode ser simples (campos vazios) ou avan√ßada (com regex)

No entanto, n√£o substitui a valida√ß√£o no servidor, pois o cliente pode desabilitar o JavaScript. A valida√ß√£o do lado do cliente serve como primeira linha de defesa e comodidade.

üìåAqui est√£o as fontes e refer√™ncias utilizadas para construir o exemplo do projeto de valida√ß√£o de formul√°rio com JavaScript:

üìò Conceitos T√©cnicos
Valida√ß√£o com JavaScript

Conhecimento b√°sico e boas pr√°ticas de uso do DOM, eventos e manipula√ß√£o de valores com addEventListener, .value, .trim(), etc.

Documenta√ß√£o:

MDN Web Docs ‚Äì Form validation

MDN Web Docs ‚Äì DOM manipulation

Express√µes Regulares para E-mail

A regex usada √© uma forma pr√°tica e simplificada, inspirada em padr√µes comuns:

/^[^\s@]+@[^\s@]+\.[^\s@]+$/

Explica√ß√£o detalhada do padr√£o:
MDN ‚Äì Regular Expressions

CSS e Estiliza√ß√£o

Uso moderno de CSS com propriedades como box-shadow, border-radius, hover, transition, etc.

Design inspirado em UI patterns leves e limpos, como os adotados por ferramentas como TailwindCSS (sem usar o framework diretamente).

Tipografia com Google Fonts:

Inter ‚Äì Google Fonts

Boas pr√°ticas de HTML

Estrutura sem√¢ntica de formul√°rio com label, input, e required.
